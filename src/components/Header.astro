---
import { Image } from "astro:assets";
import logo from "../image/index/logo_w.png";

// 导航链接数据
const navLinks = [
  { href: "/hotcard", text: "流量卡" },
  { href: "/wifi", text: "随身Wifi" },
  { href: "/product", text: "最新产品" },
  { href: "/news", text: "最新资讯" },
  { href: "/agent", text: "代理合作" },
  { href: "/about", text: "关于我们" }
];
---

<header class="relative z-50">
  <nav class="bg-gradient-to-r from-indigo-900 via-purple-900 to-pink-800 px-4 py-3 shadow-xl">
    <div class="absolute inset-0 bg-[url(/grid.svg)] bg-center [mask-image:linear-gradient(180deg,white,rgba(255,255,255,0))]"></div>
    <div class="container mx-auto flex items-center justify-between relative">
      <!-- Logo -->
      <div class="flex items-start">
        <a href="/" class="flex-shrink-0 transition-all duration-300 hover:scale-105 hover:rotate-2">
          <Image 
            class="h-14 w-auto rounded-lg shadow-lg" 
            width={231} 
            height={64} 
            src={logo} 
            alt="Logo" 
          />
        </a>
      </div>

      <!-- Desktop Menu -->
      <div class="hidden lg:flex items-center space-x-6">
        {navLinks.map(link => (
          <a href={link.href} class="nav-link group">
            <span class="relative z-10">{link.text}</span>
            <span class="absolute inset-0 bg-gradient-to-r from-pink-600 to-purple-600 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10"></span>
          </a>
        ))}
      </div>

      <!-- Mobile Menu Button -->
      <button
        type="button"
        class="lg:hidden text-gray-200 hover:text-white focus:text-white focus:outline-none"
        aria-label="toggle menu"
        id="togglemenu"
      >
        <svg viewBox="0 0 24 24" class="h-6 w-6 fill-current">
          <path fill-rule="evenodd" d="M4 5h16v2H4V5zm0 6h16v2H4v-2zm0 6h16v2H4v-2z"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Menu -->
    <div class="lg:hidden hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1">
        {navLinks.map(link => (
          <a href={link.href} class="mobile-nav-link">{link.text}</a>
        ))}
      </div>
    </div>
  </nav>
</header>

<style>
  .nav-link {
    @apply text-gray-100 text-[19px] tracking-wide font-medium px-4 py-2 rounded-lg transition-all duration-300 relative overflow-hidden;
    text-shadow: 0 2px 4px rgba(0,0,0,0.2);
  }
  
  .nav-link:hover {
    transform: translateY(-2px);
    text-shadow: 0 4px 8px rgba(0,0,0,0.3);
  }
  
  .nav-link::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, #F472B6, #C084FC);
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s ease;
    box-shadow: 0 0 10px rgba(244, 114, 182, 0.6);
  }
  
  .nav-link:hover::before {
    transform: scaleX(1);
    transform-origin: left;
  }

  .mobile-nav-link {
    @apply block text-[19px] tracking-wide font-medium text-gray-100 hover:text-white px-4 py-3 rounded-lg transition-all duration-300 relative overflow-hidden;
    text-shadow: 0 2px 4px rgba(0,0,0,0.2);
    background: linear-gradient(90deg, transparent 50%, rgba(244, 114, 182, 0.2) 50%);
    background-size: 200% 100%;
    background-position: 0% 0%;
  }

  .mobile-nav-link:hover {
    background-position: -100% 0%;
  }

  #mobile-menu {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    opacity: 0;
    transform: translateY(-10px);
    background: rgba(17, 24, 39, 0.95);
    backdrop-filter: blur(12px);
  }

  #mobile-menu.show {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  function initMobileMenu() {
    const toggleMenu = document.getElementById("togglemenu");
    const mobileMenu = document.getElementById("mobile-menu");
    
    if (toggleMenu && mobileMenu) {
      // 移除旧的事件监听器
      toggleMenu.removeEventListener("click", toggleMobileMenu);
      
      // 添加新的事件监听器
      toggleMenu.addEventListener("click", toggleMobileMenu);
      
      function toggleMobileMenu() {
        mobileMenu?.classList.toggle("hidden");
        setTimeout(() => {
          mobileMenu?.classList.toggle("show");
        }, 10);
      }
    }
  }

  // 初始化
  initMobileMenu();

  // 在页面切换时重新初始化
  document.addEventListener('astro:page-load', () => {
    initMobileMenu();
  });

  // 在页面切换前关闭菜单
  document.addEventListener('astro:before-swap', () => {
    const mobileMenu = document.getElementById("mobile-menu");
    if (mobileMenu) {
      mobileMenu.classList.remove("show");
      mobileMenu.classList.add("hidden");
    }
  });
</script>
